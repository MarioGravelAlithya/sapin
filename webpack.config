const webpack = require('webpack')
const path = require('path')
const UglifyJsPlugin = webpack.optimize.UglifyJsPlugin
const pkg = require('./package.json')

let libraryName = pkg.name

let plugins = [], outputFile
const isProd = true
plugins.push(new UglifyJsPlugin({
  parallel: true,
  uglifyOptions: {
    ecma: 8,
    compress: {warnings: false},
    sourceMap: false,
    output: {comments: false, beautify: false}
  }
}))

plugins.push( new webpack.DefinePlugin({
  'process.env.NODE_ENV': isProd ? '"production"' : '"development"'
}))

outputFile = libraryName + '.min.js'

const config = {
  entry: __dirname + '/src/index.js',
  devtool: 'source-map',
  output: {
    path: __dirname + '/lib',
    filename: outputFile,
    library: libraryName,
    libraryTarget: 'umd',
    umdNamedDefine: true
  },
  externals: {
     lodash: {
       commonjs: 'lodash',
       commonjs2: 'lodash',
       amd: 'lodash',
       root: '_'
     }
  },
  module: {
    rules: [{
      test: /\.js$/,
      use: {
        loader: 'babel-loader',
        options: {
          babelrc: false,
          cacheDirectory: false,
          presets: ['es2015'],
          plugins: ['lodash']
        }
      }
    }]
  },
  resolve: {
    modules: [path.resolve('./node_modules'), path.resolve('./src')],
    extensions: ['.js']
  },
  plugins: plugins
}


module.exports = config
